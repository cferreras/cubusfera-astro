---
// Obtener la URL de la API desde las variables de entorno
const WHITELIST_API_URL = (import.meta.env as ImportMetaEnv & {
  WHITELIST_API_URL?: string
}).WHITELIST_API_URL || 'http://localhost:8080/whitelist';

interface Member {
  name: string;
  online: boolean;
  group: string;
}

let members: Member[] = [];
let error = null;

try {
  // Obtener lista de miembros de la whitelist
  const whitelistResponse = await fetch(WHITELIST_API_URL, {
    headers: {
      'Cache-Control': 'no-cache, no-store, must-revalidate',
      'Pragma': 'no-cache',
      'Expires': '0'
    }
  });
  if (whitelistResponse.ok) {
    members = await whitelistResponse.json();
  } else {
    error = `Error al obtener la lista de miembros: ${whitelistResponse.status}`;
  }
} catch (e) {
  error = `Error de conexión: ${(e as Error).message}`;
}

// Función para obtener el color del grupo
function getGroupColor(group: string): string {
  switch (group.toLowerCase()) {
    case 'owner':
      return 'bg-gradient-to-r from-red-500 to-red-700 text-white';
    case 'admin':
      return 'bg-red-500 text-white';
    case 'moderator':
    case 'mod':
      return 'bg-blue-500 text-white';
    case 'vip':
      return 'bg-yellow-500 text-black';
    case 'premium':
      return 'bg-purple-500 text-white';
    case 'default':
    default:
      return 'bg-gray-500 text-white';
  }
}
---

{error ? (
  <div class="p-6 text-center bg-red-50 rounded-lg border border-red-200">
    <div class="mb-2 text-red-600">
      <svg class="mx-auto mb-2 w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
    </div>
    <h3 class="mb-2 text-lg font-semibold text-red-800">Error al cargar miembros</h3>
    <p class="text-red-600">{error}</p>
    <p class="mt-2 text-sm text-red-500">Por favor, inténtalo de nuevo más tarde.</p>
  </div>
) : (
  <div class="grid grid-cols-2 gap-4 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 xl:grid-cols-8">
    {members.map((member) => (
      <a 
        href={`/miembros/${member.name}`}
        class="flex flex-col items-center p-6 space-y-4 rounded-lg border transition-all duration-200 group bg-card border-border hover:border-primary/50 hover:scale-105 hover:shadow-lg"
      >
        <div class="relative mb-3">
          <img 
            src={`https://mc-heads.net/avatar/${member.name}/64`}
            alt={`Avatar de ${member.name}`}
            class="w-20 h-20 rounded-lg shadow-md transition-shadow duration-200 group-hover:shadow-lg"
            loading="lazy"
          />
          <!-- Indicador de estado online -->
          <div class={`absolute -top-1 -right-1 w-6 h-6 rounded-full border-2 border-white flex items-center justify-center ${
            member.online 
              ? 'bg-green-500' 
              : 'bg-gray-400'
          }`}>
            {member.online ? (
              <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
              </svg>
            ) : (
              <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
              </svg>
            )}
          </div>
        </div>
        <div class="space-y-2 text-center">
          <h3 class="block text-sm font-semibold transition-colors duration-200 text-foreground group-hover:text-primary">
            {member.name}
          </h3>
          
          <!-- Badge del grupo -->
          <div class="flex justify-center">
            <span class={`capitalize px-2 py-1 text-xs font-medium rounded-full ${getGroupColor(member.group)}`}>
              {member.group}
            </span>
          </div>
          
          <div class="flex items-center justify-center space-x-1">
            <div class={`w-2 h-2 rounded-full ${
              member.online ? 'bg-green-500' : 'bg-gray-400'
            }`}></div>
            <p class={`text-xs transition-colors duration-200 ${
              member.online 
                ? 'text-green-600 dark:text-green-400' 
                : 'text-gray-500 dark:text-gray-400'
            }`}>
              {member.online ? 'Jugando' : 'Desconectado'}
            </p>
          </div>
          <p class="text-xs transition-colors duration-200 text-muted-foreground group-hover:text-primary/70">Ver estadísticas</p>
        </div>
      </a>
    ))}
  </div>
)}