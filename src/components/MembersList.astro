---
// Obtener la URL de la API desde las variables de entorno
const WHITELIST_API_URL = (import.meta.env as ImportMetaEnv & {
  WHITELIST_API_URL?: string
}).WHITELIST_API_URL || 'http://localhost:8080/whitelist';

interface Member {
  name: string;
  online: boolean;
  group: string;
}

let members: Member[] = [];
let error = null;

try {
  // Obtener lista de miembros de la whitelist
  const whitelistResponse = await fetch(WHITELIST_API_URL, {
    headers: {
      'Cache-Control': 'no-cache, no-store, must-revalidate',
      'Pragma': 'no-cache',
      'Expires': '0'
    }
  });
  if (whitelistResponse.ok) {
    members = await whitelistResponse.json();
  } else {
    error = `Error al obtener la lista de miembros: ${whitelistResponse.status}`;
  }
} catch (e) {
  error = `Error de conexión: ${(e as Error).message}`;
}

// Función para obtener el color del grupo
function getGroupColor(group: string): string {
  switch (group.toLowerCase()) {
    case 'owner':
      return 'bg-destructive/10 text-destructive border-destructive/20';
    case 'admin':
      return 'bg-orange-500/10 text-orange-600 border-orange-500/20 dark:text-orange-400';
    case 'moderator':
    case 'helper':
    case 'mod':
      return 'bg-blue-500/10 text-blue-600 border-blue-500/20 dark:text-blue-400';
    case 'builder':
      return 'bg-pink-500/10 text-pink-600 border-pink-500/20 dark:text-pink-400';
    case 'vip':
      return 'bg-yellow-500/10 text-yellow-600 border-yellow-500/20 dark:text-yellow-400';
    case 'premium':
      return 'bg-purple-500/10 text-purple-600 border-purple-500/20 dark:text-purple-400';
    case 'default':
    default:
      return 'bg-white dark:bg-[#122118] text-gray-900 dark:text-white/90 border-gray-200 dark:border-[#38e07b]/20';
  }
}
---

{error ? (
  <div class="p-6 text-center border border-red-800 rounded-lg bg-red-900/20">
    <div class="mb-2 text-red-400">
      <svg class="w-8 h-8 mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
    </div>
    <h3 class="mb-2 text-lg font-semibold text-red-300">Error al cargar miembros</h3>
    <p class="text-red-400">{error}</p>
    <p class="mt-2 text-sm text-red-400">Por favor, inténtalo de nuevo más tarde.</p>
  </div>
) : (
  <div class="grid grid-cols-2 gap-4 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 xl:grid-cols-8">
    {members.map((member) => (
      <a 
        href={`/miembros/${member.name}`}
        class="group relative overflow-hidden rounded-lg border bg-gray-50 dark:bg-[#1b3124] text-gray-900 dark:text-white shadow-sm transition-all duration-300 hover:shadow-lg hover:scale-[1.02] border-gray-200 dark:border-[#366348] hover:border-green-600 dark:hover:border-[#38e07b]"
      >
        <!-- Fondo decorativo -->
        <div class="absolute inset-0 bg-gradient-to-br via-transparent opacity-0 transition-opacity duration-300 from-gray-100 dark:from-[#264532] to-green-600/5 dark:to-[#38e07b]/5 group-hover:opacity-100"></div>
        
        <div class="relative p-4">
           <!-- Avatar y estado -->
           <div class="flex flex-col items-center space-y-3">
            <div class="relative">
              <div class="overflow-hidden relative p-1 rounded-xl bg-gray-100 dark:bg-[#264532]">
                <img 
                   src={`https://mc-heads.net/avatar/${member.name}/64`}
                   alt={`Avatar de ${member.name}`}
                   class="w-12 h-12 transition-transform duration-300 rounded-lg group-hover:scale-110"
                   loading="lazy"
                 />
              </div>
              <!-- Indicador de estado online -->
               <div class={`absolute -bottom-1 -right-1 w-4 h-4 rounded-full border-2 border-gray-50 dark:border-[#1b3124] shadow-sm ${
                 member.online 
                   ? 'bg-green-500' 
                   : 'bg-gray-400 dark:bg-[#96c5a9]'
               }`}>
                 <div class={`absolute inset-0.5 rounded-full ${
                   member.online 
                     ? 'bg-green-400 animate-pulse' 
                     : 'bg-gray-300 dark:bg-[#264532]'
                 }`}></div>
               </div>
            </div>
            
            <!-- Información del jugador -->
            <div class="w-full space-y-3 text-center">
              <div class="space-y-1">
                <h3 class="font-semibold transition-colors duration-300 text-gray-900 dark:text-white group-hover:text-green-600 dark:group-hover:text-[#38e07b]">
                  {member.name}
                </h3>
                <p class={`text-sm ${
                  member.online 
                    ? 'text-green-600 dark:text-green-400' 
                    : 'text-gray-600 dark:text-[#96c5a9]'
                }`}>
                  {member.online ? 'En línea' : 'Desconectado'}
                </p>
              </div>
              
              <!-- Badge del grupo -->
              <div class="flex justify-center">
                <span class={`capitalize inline-flex items-center px-3 py-1 text-xs font-medium rounded-full border ${getGroupColor(member.group)}`}>
                  {member.group}
                </span>
              </div>
            </div>
          </div>
         </div>
      </a>
    ))}
  </div>
)}