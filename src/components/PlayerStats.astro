---
import { mapPlayerStats, getTopStats, type PlayerStats } from '../lib/statsMapper';

export interface Props {
  member: string;
}

const { member } = Astro.props;

// Obtener la URL de la API desde las variables de entorno
const STATS_API_URL = (import.meta.env as ImportMetaEnv & {
  STATS_API_URL?: string
}).STATS_API_URL || 'http://localhost:8080/stats';

let rawPlayerData = null;
let playerStats: PlayerStats | null = null;
let topMined: { item: string; count: number; }[] = [];
let topCrafted: { item: string; count: number; }[] = [];
let topUsed: { item: string; count: number; }[] = [];
let error = null;

try {
  const response = await fetch(`${STATS_API_URL}/${member}`, {
    headers: {
      'Cache-Control': 'no-cache, no-store, must-revalidate',
      'Pragma': 'no-cache',
      'Expires': '0'
    }
  });
  
  if (response.ok) {
    rawPlayerData = await response.json();
    playerStats = mapPlayerStats(rawPlayerData);
    topMined = getTopStats(rawPlayerData, 'mined');
    topCrafted = getTopStats(rawPlayerData, 'crafted');
    topUsed = getTopStats(rawPlayerData, 'used');
  } else if (response.status === 404) {
    error = 'Jugador no encontrado';
  } else {
    error = `Error al obtener estadísticas: ${response.status}`;
  }
} catch (e) {
  error = `Error de conexión: ${(e as Error).message}`;
}
---

{error ? (
  <div class="p-6 text-center bg-red-50 rounded-lg border border-red-200">
    <div class="mb-2 text-red-600">
      <svg class="mx-auto mb-2 w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
    </div>
    <h3 class="mb-2 text-lg font-semibold text-red-800">Error al cargar estadísticas</h3>
    <p class="text-red-600">{error}</p>
    <p class="mt-2 text-sm text-red-500">Por favor, inténtalo de nuevo más tarde.</p>
  </div>
) : playerStats && (
  <div class="space-y-8">
    <!-- Estadísticas Generales -->
    <div class="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-4">
      <div class="p-6 text-center rounded-xl border transition-shadow duration-300 bg-card border-border hover:shadow-lg">
        <div class="mb-2 text-3xl font-bold text-primary">{playerStats.playtime}</div>
        <div class="text-sm text-muted-foreground">Tiempo Jugado</div>
      </div>
      <div class="p-6 text-center rounded-xl border transition-shadow duration-300 bg-card border-border hover:shadow-lg">
        <div class="mb-2 text-3xl font-bold text-green-600">{playerStats.achievements}</div>
        <div class="text-sm text-muted-foreground">Logros</div>
      </div>
      <div class="p-6 text-center rounded-xl border transition-shadow duration-300 bg-card border-border hover:shadow-lg">
        <div class="mb-2 text-3xl font-bold text-red-600">{playerStats.deaths}</div>
        <div class="text-sm text-muted-foreground">Muertes</div>
      </div>
      <div class="p-6 text-center rounded-xl border transition-shadow duration-300 bg-card border-border hover:shadow-lg">
        <div class="mb-2 text-3xl font-bold text-blue-600">{playerStats.distance}</div>
        <div class="text-sm text-muted-foreground">Distancia Total</div>
      </div>
    </div>

    <!-- Estadísticas de Combate -->
    <div class="p-6 rounded-xl border bg-card border-border">
      <h3 class="flex items-center mb-4 text-xl font-semibold text-foreground">
        <svg class="mr-2 w-5 h-5 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
        </svg>
        Estadísticas de Combate
      </h3>
      <div class="grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-4">
        <div class="flex justify-between items-center p-3 rounded-lg bg-background">
          <span class="text-muted-foreground">Mobs Eliminados</span>
          <span class="font-semibold text-foreground">{playerStats.mobKills}</span>
        </div>
        <div class="flex justify-between items-center p-3 rounded-lg bg-background">
          <span class="text-muted-foreground">Jugadores Eliminados</span>
          <span class="font-semibold text-foreground">{playerStats.playerKills}</span>
        </div>
        <div class="flex justify-between items-center p-3 rounded-lg bg-background">
          <span class="text-muted-foreground">Daño Infligido</span>
          <span class="font-semibold text-foreground">{playerStats.damageDealt}</span>
        </div>
        <div class="flex justify-between items-center p-3 rounded-lg bg-background">
          <span class="text-muted-foreground">Daño Recibido</span>
          <span class="font-semibold text-foreground">{playerStats.damageTaken}</span>
        </div>
      </div>
    </div>

    <!-- Estadísticas de Construcción -->
    <div class="p-6 rounded-xl border bg-card border-border">
      <h3 class="flex items-center mb-4 text-xl font-semibold text-foreground">
        <svg class="mr-2 w-5 h-5 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
        </svg>
        Estadísticas de Construcción
      </h3>
      <div class="grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-4">
        <div class="flex justify-between items-center p-3 rounded-lg bg-background">
          <span class="text-muted-foreground">Bloques Colocados</span>
          <span class="font-semibold text-foreground">{playerStats.blocksPlaced}</span>
        </div>
        <div class="flex justify-between items-center p-3 rounded-lg bg-background">
          <span class="text-muted-foreground">Bloques Rotos</span>
          <span class="font-semibold text-foreground">{playerStats.blocksBroken}</span>
        </div>
        <div class="flex justify-between items-center p-3 rounded-lg bg-background">
          <span class="text-muted-foreground">Items Crafteados</span>
          <span class="font-semibold text-foreground">{playerStats.itemsCrafted}</span>
        </div>
        <div class="flex justify-between items-center p-3 rounded-lg bg-background">
          <span class="text-muted-foreground">Items Usados</span>
          <span class="font-semibold text-foreground">{playerStats.itemsUsed}</span>
        </div>
      </div>
    </div>

    <!-- Top Bloques Minados -->
    {topMined.length > 0 && (
      <div class="p-6 rounded-xl border bg-card border-border">
        <h3 class="flex items-center mb-4 text-xl font-semibold text-foreground">
          <svg class="mr-2 w-5 h-5 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z"></path>
          </svg>
          Bloques Más Minados
        </h3>
        <div class="grid grid-cols-1 gap-3 md:grid-cols-2 lg:grid-cols-3">
          {topMined.slice(0, 6).map((item, index) => (
            <div class="flex justify-between items-center p-3 rounded-lg bg-background">
              <span class="capitalize text-muted-foreground">{item.item.replace(/_/g, ' ')}</span>
              <span class="font-semibold text-foreground">{item.count.toLocaleString()}</span>
            </div>
          ))}
        </div>
      </div>
    )}

    <!-- Top Items Crafteados -->
    {topCrafted.length > 0 && (
      <div class="p-6 rounded-xl border bg-card border-border">
        <h3 class="flex items-center mb-4 text-xl font-semibold text-foreground">
          <svg class="mr-2 w-5 h-5 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z"></path>
          </svg>
          Items Más Crafteados
        </h3>
        <div class="grid grid-cols-1 gap-3 md:grid-cols-2 lg:grid-cols-3">
          {topCrafted.slice(0, 6).map((item, index) => (
            <div class="flex justify-between items-center p-3 rounded-lg bg-background">
              <span class="capitalize text-muted-foreground">{item.item.replace(/_/g, ' ')}</span>
              <span class="font-semibold text-foreground">{item.count.toLocaleString()}</span>
            </div>
          ))}
        </div>
      </div>
    )}

    <!-- Top Items Usados -->
    {topUsed.length > 0 && (
      <div class="p-6 rounded-xl border bg-card border-border">
        <h3 class="flex items-center mb-4 text-xl font-semibold text-foreground">
          <svg class="mr-2 w-5 h-5 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z"></path>
          </svg>
          Items Más Usados
        </h3>
        <div class="grid grid-cols-1 gap-3 md:grid-cols-2 lg:grid-cols-3">
          {topUsed.slice(0, 6).map((item, index) => (
            <div class="flex justify-between items-center p-3 rounded-lg bg-background">
              <span class="capitalize text-muted-foreground">{item.item.replace(/_/g, ' ')}</span>
              <span class="font-semibold text-foreground">{item.count.toLocaleString()}</span>
            </div>
          ))}
        </div>
      </div>
    )}
  </div>
)}