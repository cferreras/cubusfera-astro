---
export const prerender = false; // Deshabilitar pre-renderizado
import '../../styles/global.css';
import Navbar from '../../components/Navbar';
import PlayerStats from '../../components/PlayerStats.astro';

// Función requerida para rutas dinámicas en Astro
export async function getStaticPaths() {
  // Obtener la URL de la API desde las variables de entorno
  const WHITELIST_API_URL = (import.meta.env as ImportMetaEnv & {
    WHITELIST_API_URL?: string
  }).WHITELIST_API_URL || 'http://localhost:8080/whitelist';

  try {
    const response = await fetch(WHITELIST_API_URL);
    if (response.ok) {
      const members = await response.json();
      return members.map((member: string) => ({
        params: { member }
      }));
    }
  } catch (e) {
    console.error('Error fetching members for static paths:', e);
  }
  
  // Fallback: retornar array vacío si no se pueden obtener los miembros
  return [];
}

// Obtener el parámetro del miembro desde la URL
const { member } = Astro.params;

// Validar que el parámetro existe
if (!member) {
  return Astro.redirect('/miembros');
}
---

<html lang="es">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Sora:wght@100;200;300;400;500;600;700;800&display=swap" rel="stylesheet" />
    <meta name="generator" content={Astro.generator} />
    <title>Cubusfera - {member}</title>
    <script is:inline>
      // Aplicar tema inmediatamente para evitar parpadeo
      (function() {
        const savedTheme = localStorage.getItem('theme');
        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        
        if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {
          document.documentElement.classList.add('dark');
        }
      })();
    </script>
  </head>

  <body>
    <Navbar client:load />
    <main class="min-h-screen bg-background">
      <div class="container px-4 py-8 mx-auto">
        <!-- Header del jugador -->
        <div class="mb-12 space-y-6 text-center">
          <div class="flex flex-col items-center space-y-4">
            <img 
              src={`https://mc-heads.net/avatar/${member}/128`}
              alt={`Avatar de ${member}`}
              class="w-24 h-24 rounded-lg shadow-lg"
            />
            <h1 class="text-3xl font-bold md:text-4xl text-foreground">
              Estadísticas de <span class="text-primary">{member}</span>
            </h1>
          </div>
          
          <div class="pt-4">
            <a 
              href="/miembros" 
              class="inline-flex items-center px-4 py-2 text-sm font-medium rounded-lg transition-colors duration-200 bg-muted text-muted-foreground hover:bg-muted/80"
            >
              ← Volver a Miembros
            </a>
          </div>
        </div>

        <!-- Server Islands aquí -->
        <PlayerStats server:defer member={member}>
          <div slot="fallback" class="mx-auto max-w-2xl">
            <div class="p-8 text-center rounded-lg bg-muted/30">
              <div class="flex justify-center items-center mx-auto mb-4 w-16 h-16 rounded-full animate-pulse bg-primary/20">
                <svg class="w-8 h-8 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                </svg>
              </div>
              <h2 class="mb-2 text-xl font-semibold">Cargando estadísticas de {member}...</h2>
              <p class="text-muted-foreground">Obteniendo datos del servidor de forma asíncrona</p>
            </div>
          </div>
        </PlayerStats>
      </div>
    </main>
    
    <script>
      // Script para mejorar la experiencia de los desplegables
      document.addEventListener('DOMContentLoaded', function() {
        const details = document.querySelectorAll('details');
        details.forEach(detail => {
          detail.addEventListener('toggle', function() {
            if (this.open) {
              // Scroll suave al contenido cuando se abre
              setTimeout(() => {
                this.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
              }, 100);
            }
          });
        });
      });
    </script>
  </body>
</html>